<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 数据库驱动包，使用绝对路径 -->
    <classPathEntry location="mysql-connector-java-5.1.18.jar"/>

    <!-- 环境配置:
        id="自定义的配置名称"
        targetRuntime="MyBatis版本" -->
    <context id="DB2JAVA" targetRuntime="MyBatis3">
        <!-- 注释生成器 -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <!-- 是否去除自动生成的注释 true：是; false:否 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- 数据库配置：
            driverClass="驱动"
            connectionURL="数据库url"
            userId="用户"
            password="密码" -->
        <jdbcConnection
                driverClass="com.mysql.jdbc.Driver"
                connectionURL="jdbc:mysql://192.168.147.90:3358/jdtreasure?characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true&amp;allowMultiQueries=true"
                userId="jdlottery"
                password="jdlottery">
        </jdbcConnection>

        <!-- Java数据类型处理器 -->
        <javaTypeResolver>
            <!--forceBigDecimals强制双精度：
            false:把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，
            true:把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal
            默认fals-->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- Java模型（PO）生成器:
            targetPackage="生成文件的包名"
            targetProject="生成文件的位置，相对于项目目录" -->
        <javaModelGenerator
                targetPackage="com.jd.treasure.common"
                targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true"/>
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- SQL映射文件生成器：
            targetPackage="生成文件的包名"
            targetProject="已存在的项目包" -->
        <sqlMapGenerator
                targetPackage="com.jd.treasure.common"
                targetProject="src/main/java">
            !-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- Mapper接口(Mybatis既可以通过)生成器：
            targetPackage="生成文件的包名"
            targetProject="已存在的项目包" -->
        <javaClientGenerator
                type="XMLMAPPER"
                targetPackage="cn.cvu.test.dao"
                targetProject="src">
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!-- 数据库表，根据此表生成其它文件:
            tableName="已有的数据库表名称"
            domainObjetctName="对应生成的文件名前缀" -->
        <table tableName="treasure_user_code" domainObjectName="TreasureUserCodeGen">
            <!-- useActualColumnNames是否使用真实列名:
                 true：是
                 false：否，由columnOverride节点控制  -->
            <property name="useActualColumnNames" value="true"/>

            <!-- 标识列
                column="列名" sqlStatement="某种数据库语言" identity="作为主键" -->
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>

            <!-- 覆盖项，当property name="useActualColumnNames" value="true"时，
                column="被覆盖值的列名" property="用来覆盖的对应的java类的属性" -->
            <columnOverride column="code_uuid" property="codeUuid"/>

        </table>

    </context>

</generatorConfiguration>